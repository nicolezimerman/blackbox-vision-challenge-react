{"version":3,"sources":["components/Button/index.js","components/Question/index.js","components/Loader/index.js","assets/checked.png","assets/cancel.png","App.js","reportWebVitals.js","index.js"],"names":["Button","props","className","onClick","checkAnswer","children","value","Question","question","category","difficulty","number","total","Loader","App","useState","questions","setQuestions","currentQuestion","setCurrentQuestion","points","setPoints","status","setStatus","getQuestions","a","fetch","data","json","results","answer","correct_answer","type","length","setTimeout","useEffect","incorrect_answers","map","class","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2WAWiBA,MARjB,SAAgBC,GACZ,OACE,wBAAQC,UAAU,SAASC,QAAS,kBAAMF,EAAMG,YAAYH,EAAMI,WAAWC,MAAOL,EAAMI,SAA1F,SACKJ,EAAMI,Y,MCSAE,MAZjB,SAAkBN,GAAQ,IAAD,EACgBA,EAAMO,SAAtCC,EADgB,EAChBA,SAASC,EADO,EACPA,WAAWF,EADJ,EACIA,SACzB,OAEE,0BAASN,UAAU,WAAnB,UACE,mCAASD,EAAMU,OAAS,EAAxB,IAA4BV,EAAMW,SACjCJ,EACD,mCAASC,EAAT,MAAsBC,S,MCCbG,MARjB,WACI,OACI,qBAAKX,UAAU,iBAAf,SACI,qBAAKA,UAAU,qBCNZ,ICAA,ICoFAY,MA1Ef,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAEiCF,mBAAS,GAF1C,mBAENG,EAFM,KAEWC,EAFX,OAGeJ,mBAAS,GAHxB,mBAGNK,EAHM,KAGEC,EAHF,OAIeN,mBAAS,WAJxB,mBAINO,EAJM,KAIEC,EAJF,KAKPf,EAAWQ,EAAUE,GALd,SAaEM,IAbF,2EAab,8BAAAC,EAAA,sEACqBC,MAAM,yCAD3B,cACQC,EADR,gBAEqBA,EAAKC,OAF1B,OAEQA,EAFR,OAGEX,EAAaW,EAAKC,SAClBN,EAAU,YAJZ,4CAba,sBAoBb,SAASnB,EAAY0B,GAEhBtB,EAASuB,iBAAmBD,IACR,aAAlBtB,EAASwB,KACVX,GAAU,SAACD,GAAD,OAAYA,EAAS,MAE/BC,GAAU,SAACD,GAAD,OAAYA,EAAS,MAG/BF,EAAkB,GAAMF,EAAUiB,OACpCV,EAAU,YAEVW,YAAW,kBAAMf,GAAmB,SAACD,GAAD,OAAqBA,EAAkB,OAAG,KAhCrE,4CAqCb,sBAAAO,EAAA,6DACEF,EAAU,WACVJ,EAAmB,GACnBE,EAAU,GAHZ,SAIQG,IAJR,4CArCa,sBA6Cb,OArCAW,qBAAU,WAENX,MACD,IAkCW,YAAXF,EAEC,cAAC,EAAD,IAEgB,aAAXA,EAEL,sBAAKpB,UAAU,YAAf,UACE,sBAAKA,UAAU,QAAf,iCAA4CkB,KAC5C,wBAAQlB,UAAU,cAAcC,QArDzB,2CAqDP,4BAMJ,qCACE,uBAAMD,UAAU,MAAhB,UACE,cAAC,EAAD,CAAUM,SAAUA,EAAUG,OAAQO,EAAiBN,MAAOI,EAAUiB,SACxE,qBAAK/B,UAAU,UAAf,SACC,sBAAIM,EAAS4B,mBAAb,CAAgC5B,EAASuB,iBAAgBM,KAAI,SAACP,GAC7D,OAAO,cAAC,EAAD,CAAqB1B,YAAaA,EAAlC,SAAgD0B,GAAnCA,WAKxB,sBAAKQ,MAAM,SAAX,4CAAyC,mBAAGC,KAAK,oCAAR,qCCnEhCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6f6a9bbb.chunk.js","sourcesContent":["import './index.css';\r\n\r\n\r\nfunction Button(props) {\r\n    return (\r\n      <button className=\"button\" onClick={() => props.checkAnswer(props.children)} value={props.children}>\r\n          {props.children}\r\n      </button>\r\n    );\r\n  }\r\n  \r\n  export default Button;","import './index.css';\r\n\r\n\r\nfunction Question(props) {\r\n  const {category,difficulty,question} = props.question;\r\n    return (\r\n     \r\n      <section className=\"question\">\r\n        <header>{props.number + 1}/{props.total}</header>\r\n        {question}\r\n        <footer>{category} - {difficulty}</footer>\r\n      </section>\r\n    );\r\n  }\r\n  \r\n  export default Question;","import './index.css';\r\n\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div className=\"load-container\">\r\n            <div className=\"lds-dual-ring\"></div>\r\n        </div>\r\n    );\r\n  }\r\n  \r\n  export default Loader;","export default __webpack_public_path__ + \"static/media/checked.6f298cca.png\";","export default __webpack_public_path__ + \"static/media/cancel.15837238.png\";","import { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Button from './components/Button';\r\nimport Question from './components/Question';\r\nimport Loader from './components/Loader';\r\n\r\nimport Correct from './assets/checked.png';\r\nimport Wrong from './assets/cancel.png';\r\n\r\n\r\nfunction App() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [points, setPoints] = useState(0);\r\n  const [status, setStatus] = useState(\"pending\");\r\n  const question = questions[currentQuestion];\r\n\r\n\r\n  useEffect(() => {\r\n      //Codigo que se ejecuta solo al montar\r\n      getQuestions();\r\n  }, []);\r\n\r\n  async function getQuestions() {\r\n    const data = await fetch(\"https://opentdb.com/api.php?amount=10\");\r\n    const json = await data.json();\r\n    setQuestions(json.results);\r\n    setStatus('resolved')\r\n  }\r\n\r\n  function checkAnswer(answer){\r\n    //ver como agregar loader\r\n    if(question.correct_answer === answer){\r\n      if(question.type === 'multiple'){\r\n        setPoints((points) => points + 10);\r\n      }else{\r\n        setPoints((points) => points + 5);\r\n      }\r\n    }\r\n    if((currentQuestion + 1) == questions.length){\r\n      setStatus('finished');\r\n    }else{\r\n      setTimeout(() => setCurrentQuestion((currentQuestion) => currentQuestion + 1),600);  \r\n    }\r\n\r\n  }\r\n\r\n  async function restart(){\r\n    setStatus(\"pending\");\r\n    setCurrentQuestion(0);\r\n    setPoints(0);\r\n    await getQuestions();\r\n  }\r\n\r\n  \r\n  if(status === \"pending\"){\r\n    return(\r\n      <Loader></Loader>\r\n    )\r\n  }else if(status === \"finished\"){\r\n    return(\r\n      <div className=\"container\">\r\n        <div className=\"score\">Your total score is {points}</div>\r\n        <button className=\"start-again\" onClick={restart}>Start again</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (  \r\n    <>\r\n      <main className=\"App\">\r\n        <Question question={question} number={currentQuestion} total={questions.length}></Question>\r\n        <nav className=\"answers\"> \r\n        {[...question.incorrect_answers, question.correct_answer].map((answer) =>{\r\n          return <Button key={answer} checkAnswer={checkAnswer}>{answer}</Button>\r\n        })}  \r\n        </nav>\r\n        \r\n      </main>\r\n      <div class=\"footer\">Developed with ❤️ by <a href=\"https://nicolezimerman.github.io/\"> Nicole Zimerman</a></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}